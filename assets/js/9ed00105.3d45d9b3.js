"use strict";(self.webpackChunkdadle=self.webpackChunkdadle||[]).push([[4],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),c=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(d.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},_=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(n),_=i,h=p["".concat(d,".").concat(_)]||p[_]||u[_]||r;return n?a.createElement(h,o(o({ref:t},s),{},{components:n})):a.createElement(h,o({ref:t},s))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=_;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}_.displayName="MDXCreateElement"},9733:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const r={slug:"/configuration",sidebar_position:3},o="Configuration",l={unversionedId:"configuration",id:"configuration",title:"Configuration",description:"Dadle is configured by environment variables, either by setting them in the .env-File or by specifying them when running the frontend or backend service.",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/configuration",draft:!1,editUrl:"https://github.com/dadlepolls/dadle/tree/dev/docs/docs/configuration.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{slug:"/configuration",sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Quickstart",permalink:"/quickstart"},next:{title:"Changelog and Upgrading",permalink:"/changelog"}},d={},c=[{value:"General config",id:"general-config",level:2},{value:"<code>PACKAGE_VERSION</code>",id:"package_version",level:3},{value:"<code>DADLE_PORT</code>",id:"dadle_port",level:3},{value:"<code>BACKEND_LOG_LEVEL</code>",id:"backend_log_level",level:3},{value:"<code>BACKEND_PUBLIC_URL</code>",id:"backend_public_url",level:3},{value:"<code>FRONTEND_PUBLIC_URL</code>",id:"frontend_public_url",level:3},{value:"<code>BACKEND_TRUST_PROXY</code>",id:"backend_trust_proxy",level:3},{value:"Authentication settings",id:"authentication-settings",level:2},{value:"<code>AUTH_ISSUER_BASEURL</code>",id:"auth_issuer_baseurl",level:3},{value:"<code>AUTH_CLIENT_ID</code> and <code>AUTH_CLIENT_SECRET</code>",id:"auth_client_id-and-auth_client_secret",level:3},{value:"Calendar integration",id:"calendar-integration",level:2},{value:"Microsoft 365 Calendar",id:"microsoft-365-calendar",level:3},{value:"<code>CAL_MS_TENANT_ID</code>",id:"cal_ms_tenant_id",level:4},{value:"<code>CAL_MS_CLIENT_ID</code> and <code>CAL_MS_CLIENT_SECRET</code>",id:"cal_ms_client_id-and-cal_ms_client_secret",level:4},{value:"Google Calendar",id:"google-calendar",level:3},{value:"<code>CAL_GOOGLE_CLIENT_ID</code> and <code>CAL_GOOGLE_CLIENT_SECRET</code>",id:"cal_google_client_id-and-cal_google_client_secret",level:4}],s={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"Dadle is configured by environment variables, either by setting them in the ",(0,i.kt)("inlineCode",{parentName:"p"},".env"),"-File or by specifying them when running the frontend or backend service."),(0,i.kt)("h2",{id:"general-config"},"General config"),(0,i.kt)("h3",{id:"package_version"},(0,i.kt)("inlineCode",{parentName:"h3"},"PACKAGE_VERSION")),(0,i.kt)("p",null,"Version of Dadle to be used. Default: ",(0,i.kt)("inlineCode",{parentName:"p"},"latest"),". Can be ",(0,i.kt)("inlineCode",{parentName:"p"},"latest")," for latest stable version, ",(0,i.kt)("inlineCode",{parentName:"p"},"dev")," for current development snapshot or any other tagged version."),(0,i.kt)("h3",{id:"dadle_port"},(0,i.kt)("inlineCode",{parentName:"h3"},"DADLE_PORT")),(0,i.kt)("p",null,"HTTP port that the service is listening on. You should expose this port to public by some reverse proxy and with HTTPS configured. Default: ",(0,i.kt)("inlineCode",{parentName:"p"},"3000"),"."),(0,i.kt)("h3",{id:"backend_log_level"},(0,i.kt)("inlineCode",{parentName:"h3"},"BACKEND_LOG_LEVEL")),(0,i.kt)("p",null,"Log level for the backend service, specifying verbosity. One of ",(0,i.kt)("inlineCode",{parentName:"p"},"error"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"warn"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"info"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"http"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"verbose"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"debug"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"silly")),(0,i.kt)("h3",{id:"backend_public_url"},(0,i.kt)("inlineCode",{parentName:"h3"},"BACKEND_PUBLIC_URL")),(0,i.kt)("p",null,"THe public URL that the backend is reachable at, without trailing slash. Example: ",(0,i.kt)("inlineCode",{parentName:"p"},"https://dadle-backend-stable.example.com")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"https://dadle.example.com/backend")),(0,i.kt)("h3",{id:"frontend_public_url"},(0,i.kt)("inlineCode",{parentName:"h3"},"FRONTEND_PUBLIC_URL")),(0,i.kt)("p",null,"The public URL that the frontend service is reachable at, without trailing slash."),(0,i.kt)("h3",{id:"backend_trust_proxy"},(0,i.kt)("inlineCode",{parentName:"h3"},"BACKEND_TRUST_PROXY")),(0,i.kt)("p",null,"This sets the ",(0,i.kt)("a",{parentName:"p",href:"https://expressjs.com/guide/behind-proxies.html"},'"trust proxy" attribute')," of the backend service. For the pre-built Docker image, this may be set to 1 (if you are accessing Dadle directly from your system), 2 (if you've got a reverse proxy running) or any other value stated in the ",(0,i.kt)("a",{parentName:"p",href:"https://expressjs.com/guide/behind-proxies.html"},"documentation")),(0,i.kt)("h2",{id:"authentication-settings"},"Authentication settings"),(0,i.kt)("p",null,"Any OpenID provider (e.g. MS Azure, Google Sign-In, Keycloak etc.) can be used for allowing users to sign in to the instance."),(0,i.kt)("h3",{id:"auth_issuer_baseurl"},(0,i.kt)("inlineCode",{parentName:"h3"},"AUTH_ISSUER_BASEURL")),(0,i.kt)("p",null,"OpenID-Connect base URL of your OID provider"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Microsoft Azure: ",(0,i.kt)("inlineCode",{parentName:"li"},"https://login.microsoftonline.com/organizations/v2.0")),(0,i.kt)("li",{parentName:"ul"},"Google: ",(0,i.kt)("inlineCode",{parentName:"li"},"https://accounts.google.com"))),(0,i.kt)("h3",{id:"auth_client_id-and-auth_client_secret"},(0,i.kt)("inlineCode",{parentName:"h3"},"AUTH_CLIENT_ID")," and ",(0,i.kt)("inlineCode",{parentName:"h3"},"AUTH_CLIENT_SECRET")),(0,i.kt)("p",null,"Client ID and secret for app openid app registration"),(0,i.kt)("h2",{id:"calendar-integration"},"Calendar integration"),(0,i.kt)("p",null,"Currently, Dadle allows users to link their Microsoft 365 and Google calendars to show availability hints on date polls."),(0,i.kt)("p",null,"Therefore, you must register an app with Microsoft and/ or Google and configure it. See the chapters for setting up calendar integrations for further details and detailed explanations."),(0,i.kt)("h3",{id:"microsoft-365-calendar"},"Microsoft 365 Calendar"),(0,i.kt)("h4",{id:"cal_ms_tenant_id"},(0,i.kt)("inlineCode",{parentName:"h4"},"CAL_MS_TENANT_ID")),(0,i.kt)("p",null,"Azure tenant ID that the app registration was made with or ",(0,i.kt)("inlineCode",{parentName:"p"},"common")," in case you've configured your app as a multi-tenant application"),(0,i.kt)("h4",{id:"cal_ms_client_id-and-cal_ms_client_secret"},(0,i.kt)("inlineCode",{parentName:"h4"},"CAL_MS_CLIENT_ID")," and ",(0,i.kt)("inlineCode",{parentName:"h4"},"CAL_MS_CLIENT_SECRET")),(0,i.kt)("p",null,"Client ID and secret for the Azure app registration"),(0,i.kt)("h3",{id:"google-calendar"},"Google Calendar"),(0,i.kt)("h4",{id:"cal_google_client_id-and-cal_google_client_secret"},(0,i.kt)("inlineCode",{parentName:"h4"},"CAL_GOOGLE_CLIENT_ID")," and ",(0,i.kt)("inlineCode",{parentName:"h4"},"CAL_GOOGLE_CLIENT_SECRET")),(0,i.kt)("p",null,"Client ID and secret for the Google app registration."))}u.isMDXComponent=!0}}]);